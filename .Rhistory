?kable
??kable
#load the tidyverse and the dataset
library(tidyverse)
data <- read_csv("./data_raw/fricatives.csv")
#get an idea of what the data look like
str(data)
data <- read.csv("./data_raw/fricatives.csv")
#get an idea of what the data look like
str(data)
View(data)
?dplyr
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, obs, -obs)
View(data)
?separate
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, obs, -obs) %>%
separate(., meas, into = c("segment, meas"), remove = T)
data <- read_csv("./data_raw/fricatives.csv")
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, obs, -obs) %>%
separate(., meas, into = c("segment, meas"), remove = T)
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("segment, meas"), remove = T)
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("segment, meas"), sep = "_", remove = T)
data %>%
gather(., meas, val, -obs)
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("segment", "meas"), sep = "_", remove = T)
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T)
data <- read_csv("./data_raw/fricatives.csv")
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T)
?unite
?spread
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
data %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
fric <- read_csv("./data_raw/fricatives.csv")
#get an idea of what the data look like
str(fric)
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
tidy_fric <- fric %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
View(tidy_fric)
View(fric)
?broom
View(tidy_fric)
#table of descriptive statistics
tidy_fric %>%
group_by(., "phoneme") %>%
summarize(., mean = mean, sd = sd)
View(tidy_fric)
#table of descriptive statistics
tidy_fric %>%
group_by(., "phoneme") %>%
summarize(., mean_cog = mean(cog), sd_cog = sd(cog),
mean_skew = mean(skewness), sd_skew = sd(skewness))
View(tidy_fric)
#table of descriptive statistics
tidy_fric %>%
group_by(., phoneme) %>%
summarize(., mean_cog = mean(cog), sd_cog = sd(cog),
mean_skew = mean(skewness), sd_skew = sd(skewness))
#boxplot of center of gravity as function of phoneme
tidy_fric %>%
#boxplot of center of gravity as function of phoneme
tidy_fric %>%
#boxplot of center of gravity as function of phoneme
tidy_fric %>%
#boxplot of center of gravity as function of phoneme
tidy_fric %>%
ggplot(., aes(phoneme, cog))+
geom_boxplot()
#boxplot of center of gravity as function of phoneme
tidy_fric %>%
ggplot(aes(phoneme, cog))+
geom_boxplot()
??statistical transformation
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary()
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.ymin = min, fun.ymax = max, fun.y = median)
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_cl_boot)
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_sdl)
?mean_sdl
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_cl_boot)
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_cl_boot)+
ylim(0,0.7)
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_cl_boot)
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_cl_boot) +
ylim(-1,1)
#plot skewness ~ phoneme using a statistical transformation
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_cl_boot)
#fit a model that examines center of gravity as a function of skewness for [s]
#transform the data
s_fric_log <- tidy_fric %>%
select(., phoneme == "s") %>%
mutate(., log_cog = log(cog), log_skew = log(skewness))
View(tidy_fric)
#fit a model that examines center of gravity as a function of skewness for [s]
#transform the data
s_fric_log <- tidy_fric %>%
filter(., phoneme == "s") %>%
mutate(., log_cog = log(cog), log_skew = log(skewness))
View(s_fric_log)
View(s_fric_log)
tidy_s <- tidy_fric %>%
filter(., phoneme == "s")
ggplot(tidy_s, aes(skewness, cog))+
geom_point()
#fit a model that examines center of gravity as a function of skewness for [s]
#transform the data
s_fric_log <- tidy_fric %>%
filter(., phoneme == "s") %>%
mutate(., log_cog = log(cog))
ggplot(s_fric_log, aes(skewness, log_cog))+
geom_point()
ggplot(tidy_s, aes(skewness, cog))+
geom_point()
scsmod <- lm(cog ~ skewness, data = tidy_s)
summary(scsmod)
?broom
?broom::tidy
broom::tidy(scsmod)
??table
??kable
#load the tidyverse and the dataset
library(tidyverse)
fric <- read_csv("./data_raw/fricatives.csv")
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
tidy_fric <- fric %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
tidy_s <- tidy_fric %>%
filter(., phoneme == "s")
scsmod <- lm(cog ~ skewness, data = tidy_s)
?peak
?glimpse
glimpse(fric)
library(ggfortify)
glimpse(fric)
??glimpse
tibble::glimpse(fric)
fric <- read_csv("./data_raw/fricatives.csv")
#load the tidyverse and the dataset
library(tidyverse)
glimpse(fric)
fric <- read_csv("./data_raw/fricatives.csv")
glimpse(fric)
#load the tidyverse and the dataset
library(tidyverse)
library(ggfortify)
fric <- read_csv("./data_raw/fricatives.csv")
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
tidy_fric <- fric %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
tidy_s <- tidy_fric %>%
filter(., phoneme == "s")
scsmod <- lm(cog ~ skewness, data = tidy_s)
#load the tidyverse and the dataset
library(tidyverse)
library(ggfortify)
fric <- read_csv("./data_raw/fricatives.csv")
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
tidy_fric <- fric %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
tidy_s <- tidy_fric %>%
filter(., phoneme == "s")
scsmod <- lm(cog ~ skewness, data = tidy_s)
#check model diagnostics and have plots
summary(scsmod$residuals)
summary(scsmod)
mod1 <- lm(mpg ~ wt, data = mtcars)
summary(mod1)
#2. homoskedasticity of residuals
autoplot(scsmod, which = (1))
#2. homoskedasticity of residuals
autoplot(scsmod, which = c(1,3))
#3. No autocorrelation of residuals
acf(scsmod$residuals)
#4. Normality of residuals
autoplot(scsmod, which = 4)
#4. Normality of residuals
autoplot(scsmod, which = 2)
#table of descriptive statistics
tidy_fric %>%
group_by(., phoneme) %>%
summarize(., mean_cog = mean(cog), sd_cog = sd(cog),
mean_skew = mean(skewness), sd_skew = sd(skewness))
#load the tidyverse and the dataset
library(tidyverse)
library(ggfortify)
fricdat <- read_csv("./data_raw/fricatives.csv")
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
tidy_fric <- fric %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
tidy_fric <- fricdat %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
#table of descriptive statistics
tidy_fric %>%
group_by(., phoneme) %>%
summarize(., mean_cog = mean(cog), sd_cog = sd(cog),
mean_skew = mean(skewness), sd_skew = sd(skewness))
?labs
?mean_cl_boot
?hmisc
scsmod <- lm(cog ~ skewness, data = tidy_s)
#load the tidyverse and the dataset
library(tidyverse)
library(ggfortify)
fricdat <- read_csv("./data_raw/fricatives.csv")
#tidy the dataset; we want to collapse the _cog and _skewness columns into single columns,
#and create a segment column with [s] and [sh]
tidy_fric <- fricdat %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
tidy_s <- tidy_fric %>%
filter(., phoneme == "s")
scsmod <- lm(cog ~ skewness, data = tidy_s)
summary(scsmod)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggfortify)
fricdat <- read_csv("../data_raw/fricatives.csv")
tidy_fric <- fricdat %>%
gather(., meas, val, -obs) %>%
separate(., meas, into = c("phoneme", "meas"), sep = "_", remove = T) %>%
spread(., meas, val)
tidy_s <- tidy_fric %>%
filter(., phoneme == "s")
head(tidy_fric)
tidy_fric %>%
ggplot(aes(phoneme, cog))+
geom_boxplot() +
labs(title = "Center of Gravity as a Function of Phoneme",
y = "Center of Gravity (Hz)",
x = "Phoneme")
tidy_fric %>%
ggplot(aes(phoneme, skewness))+
stat_summary(fun.data = mean_cl_boot)+
labs(title = "Statistical Summary of Skewness, [s] and [sh]",
y = "Skewness",
x = "Phoneme")
